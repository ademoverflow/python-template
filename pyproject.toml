[tool.poetry]
name = "python-template"
version = "1.8.0"
description = "description-here"
readme = "README.md"
authors = ["Adem Usta <adem@antipodestudios.io>"]
packages = [{ include = "python_template", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"

[tool.poetry.group.dev.dependencies]
pylint = "^2.15.4"
black = "^22.8.0"
pytest = "^7.1.3"
coverage = { extras = ["toml"], version = "^6.5.0" }
pytest-cov = "^4.0.0"
ipython = "^8.5.0"
isort = "^5.11.2"
sphinx = "5.3.0"
myst-parser = "^0.18.1"
sphinx-rtd-theme = "^1.1.1"
python-semantic-release = "^7.33.0"
mypy = "^1.4.1"
poethepoet = "^0.21.1"

[tool.poe.tasks]
# Tasks that modify source code if necessary.
format = "black src/python_template tests"
sort = "isort src/python_template tests"
# Tasks to check source code quality
check-format = "black --check src/python_template tests"
check-sort = "isort --check src/python_template tests"
check-types = "mypy src/python_template tests"
check-lint = "pylint src/python_template tests"
# Tasks to run tests
unit-tests = "coverage run -m pytest"
coverage = "coverage report -m"
# Global tasks to run all checks and tests
code-quality = ["check-format", "check-sort", "check-types", "check-lint"]
tests = ["unit-tests", "coverage"]
integration-tests = "echo NOT_IMPLEMENTED"

[tool.mypy]
disallow_untyped_defs = true
mypy_path = "stubs"
ignore_missing_imports = true
install_types = true
pretty = true
show_column_numbers = true

[tool.black]
line-length = 100

[tool.isort]
line_length = 100
profile = "black"

[tool.pylint.messages_control]
init-import = true
max-line-length = 100
disable = ["missing-module-docstring"]
generated-members = []

[tool.coverage.run]
omit = [".*", "*/site-packages/*", "*__init__*", "*__main__*"]
source = ["python_template"]

[tool.coverage.report]
fail_under = 100

[tool.semantic_release]
branch = "master"
hvcs = "github"
version_toml = "pyproject.toml:tool.poetry.version"
build_command = "poetry build"
upload_to_repository = false
upload_to_release = true
commit_author = "github-actions <action@github.com>"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
